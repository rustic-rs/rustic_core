[package]
name = "rustic_backend"
version = "0.5.2"
authors = ["the rustic-rs team"]
categories = ["data-structures", "filesystem"]
documentation = "https://docs.rs/rustic_backend"
edition = "2024"
homepage = "https://rustic.cli.rs/"
include = ["src/**/*", "LICENSE-*", "README.md"]
keywords = ["backup", "restic", "deduplication", "encryption", "library"]
license = "Apache-2.0 OR MIT"
publish = true
readme = "README.md"
repository = "https://github.com/rustic-rs/rustic_core/tree/main/crates/backend"
resolver = "3"
rust-version = { workspace = true }
description = """
rustic_backend - library for supporting various backends in rustic-rs
"""

[lib]
path = "src/lib.rs"
name = "rustic_backend"
test = true
doctest = true
bench = true
doc = true
harness = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
cli = ["merge", "clap"]
merge = ["dep:conflate"]
clap = ["dep:clap"]
rest = ["dep:reqwest", "dep:backon"]
rclone = ["rest", "dep:rand", "dep:semver"]
# opendal services
opendal-all = ["opendal-all-windows", "sftp"]
# sftp is not supported on windows, see https://github.com/apache/opendal/issues/2963
opendal-all-windows = [
  "azblob",
  "azdls",
  "azfile",
  "b2",
  "cos",
  "dropbox",
  # "ftp"  - is temporarily disabled due to dependency on aws-lc-sys
  "fs",
  "gcs",
  "gdrive",
  "ghac",
  "http",
  "ipmfs",
  "obs",
  "oss",
  "onedrive",
  "s3",
  "swift",
  "webdav",
  "webhdfs",
  "yandex-disk",
]
opendal = [
  "dep:opendal",
  "dep:rayon",
  "dep:tokio",
  "tokio/rt-multi-thread",
  "dep:typed-path",
]
azblob = ["opendal", "opendal?/services-azblob"]
azdls = ["opendal", "opendal?/services-azdls"]
azfile = ["opendal", "opendal?/services-azfile"]
b2 = ["opendal", "opendal?/services-b2"]
cos = ["opendal", "opendal?/services-cos"]
dropbox = ["opendal", "opendal?/services-dropbox"]
fs = ["opendal", "opendal?/services-fs"]
# "ftp"  - is temporarily disabled due to dependency on aws-lc-sys
# ftp = ["opendal", "opendal?/services-ftp"]
gcs = ["opendal", "opendal?/services-gcs"]
gdrive = ["opendal", "opendal?/services-gdrive"]
ghac = ["opendal", "opendal?/services-ghac"]
http = ["opendal", "opendal?/services-http"]
ipmfs = ["opendal", "opendal?/services-ipmfs"]
memory = ["opendal", "opendal?/services-memory"]
obs = ["opendal", "opendal?/services-obs"]
onedrive = ["opendal", "opendal?/services-onedrive"]
oss = ["opendal", "opendal?/services-oss"]
s3 = ["opendal", "opendal?/services-s3"]
sftp = ["opendal", "opendal?/services-sftp"]
swift = ["opendal", "opendal?/services-swift"]
webdav = ["opendal", "opendal?/services-webdav"]
webhdfs = ["opendal", "opendal?/services-webhdfs"]
yandex-disk = ["opendal", "opendal?/services-yandex-disk"]

[dependencies]
# core
rustic_core = { workspace = true }

# errors
displaydoc = { workspace = true }
thiserror = { workspace = true }

# logging
log = { workspace = true }

# other dependencies
bytes = { workspace = true }
derive_setters = "0.1.6"
humantime = "2.2.0"
itertools = "0.14.0"
strum = "0.27"
strum_macros = "0.27"

# general / backend choosing
hex = { version = "0.4.3", features = ["serde"] }
serde = { version = "1.0.219" }

# cli support
clap = { version = "4.5.37", optional = true, features = ["derive", "env", "wrap_help"] }
conflate = { version = "0.3.3", optional = true }

# local backend
aho-corasick = { workspace = true }
walkdir = "2.5.0"

# rest backend
backon = { version = "1.5.0", optional = true }
reqwest = { version = "0.12.15", default-features = false, features = ["json", "rustls-tls-native-roots", "stream", "blocking"], optional = true }

# rclone backend
rand = { version = "0.9.1", optional = true }
semver = { version = "1.0.26", optional = true }

# opendal backend
bytesize = "2.0.1"
opendal = { version = "0.53.1", features = ["layers-blocking", "layers-throttle"], optional = true }
rayon = { version = "1.10.0", optional = true }
tokio = { version = "1.44.2", optional = true, default-features = false }
typed-path = { version = "0.10.0", optional = true }

[dev-dependencies]
anyhow = { workspace = true }
rstest = { workspace = true }
toml = "0.8.20"

[lints]
workspace = true
