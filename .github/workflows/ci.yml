name: Continuous Integration

on:
  pull_request:
    paths-ignore:
      - "**/*.md"
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
  schedule:
    - cron: "0 0 * * 0"
  merge_group:
    types: [checks_requested]

env:
  # Comma-separated list of all non-conflicting features.
  all_features: cli

jobs:
  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: stable
      - run: rustup component add rustfmt
      - name: Run Cargo Fmt
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2
      - name: Run clippy
        run: cargo clippy --all-targets --features ${{ env.all_features }} -- -D warnings

  test:
    name: Test
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        rust: [stable]
        job:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2
      - name: Run Cargo Test
        run: cargo +${{ matrix.rust }} test -r --all-targets --features ${{ env.all_features }} --workspace

  docs:
    name: Build docs
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        rust: [stable]
        job:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ matrix.rust }}
      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2
      - name: Run Cargo Doc
        run: cargo +${{ matrix.rust }} doc --no-deps --features ${{ env.all_features }} --workspace --examples

  powerset:
    name: Check Powerset of Features
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        rust: [stable, beta, nightly]
        job:
          - os: macos-latest
          - os: ubuntu-latest
          - os: windows-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@1482605bfc5719782e1267fd0c0cc350fe7646b8 # v1
        with:
          toolchain: ${{ matrix.rust }}
      - name: install cargo-hack
        uses: taiki-e/install-action@f34807f1324b6e701523b6a44e40e4c6e604654e # v2
        with:
          tool: cargo-hack
      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2

      - name: Install libssl-dev
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install libssl-dev

      - name: Run Cargo Hack with tls-rustls
        run: cargo +${{ matrix.rust }} hack check --feature-powerset --features tls-rustls --skip tls-native --no-dev-deps

      - name: Run Cargo Hack with tls-native
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: cargo +${{ matrix.rust }} hack check --feature-powerset --features tls-native --skip tls-rustls --no-dev-deps

  result:
    name: Result (CI)
    runs-on: ubuntu-latest
    needs:
      - fmt
      - clippy
      - test
      - docs
      - powerset
    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: "!success()"
